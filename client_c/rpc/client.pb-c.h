/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: client.proto */

#ifndef PROTOBUF_C_client_2eproto__INCLUDED
#define PROTOBUF_C_client_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Rpc__WritePointsRequest Rpc__WritePointsRequest;
typedef struct Rpc__WritePointsResponse Rpc__WritePointsResponse;
typedef struct Rpc__QuerySeriesRequest Rpc__QuerySeriesRequest;
typedef struct Rpc__QuerySeriesResponse Rpc__QuerySeriesResponse;
typedef struct Rpc__ConfigRequest Rpc__ConfigRequest;
typedef struct Rpc__ConfigResponse Rpc__ConfigResponse;
typedef struct Rpc__QueryRangeRequest Rpc__QueryRangeRequest;
typedef struct Rpc__QueryRangeResponse Rpc__QueryRangeResponse;
typedef struct Rpc__QueryTagValuesRequest Rpc__QueryTagValuesRequest;
typedef struct Rpc__QueryTagValuesResponse Rpc__QueryTagValuesResponse;
typedef struct Rpc__QueryNewPointRequest Rpc__QueryNewPointRequest;
typedef struct Rpc__QueryNewPointResponse Rpc__QueryNewPointResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * 请求消息
 */
struct  Rpc__WritePointsRequest
{
  ProtobufCMessage base;
  char *row;
};
#define RPC__WRITE_POINTS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpc__write_points_request__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * 响应消息
 */
struct  Rpc__WritePointsResponse
{
  ProtobufCMessage base;
  char *reply;
};
#define RPC__WRITE_POINTS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpc__write_points_response__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * 请求消息
 */
struct  Rpc__QuerySeriesRequest
{
  ProtobufCMessage base;
  char *tags;
};
#define RPC__QUERY_SERIES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpc__query_series_request__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * 响应消息
 */
struct  Rpc__QuerySeriesResponse
{
  ProtobufCMessage base;
  char *reply;
};
#define RPC__QUERY_SERIES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpc__query_series_response__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  Rpc__ConfigRequest
{
  ProtobufCMessage base;
  char *name;
  char *path;
};
#define RPC__CONFIG_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpc__config_request__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  Rpc__ConfigResponse
{
  ProtobufCMessage base;
  char *reply;
};
#define RPC__CONFIG_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpc__config_response__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * 请求消息
 */
struct  Rpc__QueryRangeRequest
{
  ProtobufCMessage base;
  char *metric_tags;
};
#define RPC__QUERY_RANGE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpc__query_range_request__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * 响应消息
 */
struct  Rpc__QueryRangeResponse
{
  ProtobufCMessage base;
  char *reply;
};
#define RPC__QUERY_RANGE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpc__query_range_response__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * 请求消息
 */
struct  Rpc__QueryTagValuesRequest
{
  ProtobufCMessage base;
  char *tag;
};
#define RPC__QUERY_TAG_VALUES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpc__query_tag_values_request__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * 响应消息
 */
struct  Rpc__QueryTagValuesResponse
{
  ProtobufCMessage base;
  char *reply;
};
#define RPC__QUERY_TAG_VALUES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpc__query_tag_values_response__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  Rpc__QueryNewPointRequest
{
  ProtobufCMessage base;
  char *tag;
};
#define RPC__QUERY_NEW_POINT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpc__query_new_point_request__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * 响应消息
 */
struct  Rpc__QueryNewPointResponse
{
  ProtobufCMessage base;
  char *reply;
};
#define RPC__QUERY_NEW_POINT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpc__query_new_point_response__descriptor) \
    , (char *)protobuf_c_empty_string }


/* Rpc__WritePointsRequest methods */
void   rpc__write_points_request__init
                     (Rpc__WritePointsRequest         *message);
size_t rpc__write_points_request__get_packed_size
                     (const Rpc__WritePointsRequest   *message);
size_t rpc__write_points_request__pack
                     (const Rpc__WritePointsRequest   *message,
                      uint8_t             *out);
size_t rpc__write_points_request__pack_to_buffer
                     (const Rpc__WritePointsRequest   *message,
                      ProtobufCBuffer     *buffer);
Rpc__WritePointsRequest *
       rpc__write_points_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpc__write_points_request__free_unpacked
                     (Rpc__WritePointsRequest *message,
                      ProtobufCAllocator *allocator);
/* Rpc__WritePointsResponse methods */
void   rpc__write_points_response__init
                     (Rpc__WritePointsResponse         *message);
size_t rpc__write_points_response__get_packed_size
                     (const Rpc__WritePointsResponse   *message);
size_t rpc__write_points_response__pack
                     (const Rpc__WritePointsResponse   *message,
                      uint8_t             *out);
size_t rpc__write_points_response__pack_to_buffer
                     (const Rpc__WritePointsResponse   *message,
                      ProtobufCBuffer     *buffer);
Rpc__WritePointsResponse *
       rpc__write_points_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpc__write_points_response__free_unpacked
                     (Rpc__WritePointsResponse *message,
                      ProtobufCAllocator *allocator);
/* Rpc__QuerySeriesRequest methods */
void   rpc__query_series_request__init
                     (Rpc__QuerySeriesRequest         *message);
size_t rpc__query_series_request__get_packed_size
                     (const Rpc__QuerySeriesRequest   *message);
size_t rpc__query_series_request__pack
                     (const Rpc__QuerySeriesRequest   *message,
                      uint8_t             *out);
size_t rpc__query_series_request__pack_to_buffer
                     (const Rpc__QuerySeriesRequest   *message,
                      ProtobufCBuffer     *buffer);
Rpc__QuerySeriesRequest *
       rpc__query_series_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpc__query_series_request__free_unpacked
                     (Rpc__QuerySeriesRequest *message,
                      ProtobufCAllocator *allocator);
/* Rpc__QuerySeriesResponse methods */
void   rpc__query_series_response__init
                     (Rpc__QuerySeriesResponse         *message);
size_t rpc__query_series_response__get_packed_size
                     (const Rpc__QuerySeriesResponse   *message);
size_t rpc__query_series_response__pack
                     (const Rpc__QuerySeriesResponse   *message,
                      uint8_t             *out);
size_t rpc__query_series_response__pack_to_buffer
                     (const Rpc__QuerySeriesResponse   *message,
                      ProtobufCBuffer     *buffer);
Rpc__QuerySeriesResponse *
       rpc__query_series_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpc__query_series_response__free_unpacked
                     (Rpc__QuerySeriesResponse *message,
                      ProtobufCAllocator *allocator);
/* Rpc__ConfigRequest methods */
void   rpc__config_request__init
                     (Rpc__ConfigRequest         *message);
size_t rpc__config_request__get_packed_size
                     (const Rpc__ConfigRequest   *message);
size_t rpc__config_request__pack
                     (const Rpc__ConfigRequest   *message,
                      uint8_t             *out);
size_t rpc__config_request__pack_to_buffer
                     (const Rpc__ConfigRequest   *message,
                      ProtobufCBuffer     *buffer);
Rpc__ConfigRequest *
       rpc__config_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpc__config_request__free_unpacked
                     (Rpc__ConfigRequest *message,
                      ProtobufCAllocator *allocator);
/* Rpc__ConfigResponse methods */
void   rpc__config_response__init
                     (Rpc__ConfigResponse         *message);
size_t rpc__config_response__get_packed_size
                     (const Rpc__ConfigResponse   *message);
size_t rpc__config_response__pack
                     (const Rpc__ConfigResponse   *message,
                      uint8_t             *out);
size_t rpc__config_response__pack_to_buffer
                     (const Rpc__ConfigResponse   *message,
                      ProtobufCBuffer     *buffer);
Rpc__ConfigResponse *
       rpc__config_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpc__config_response__free_unpacked
                     (Rpc__ConfigResponse *message,
                      ProtobufCAllocator *allocator);
/* Rpc__QueryRangeRequest methods */
void   rpc__query_range_request__init
                     (Rpc__QueryRangeRequest         *message);
size_t rpc__query_range_request__get_packed_size
                     (const Rpc__QueryRangeRequest   *message);
size_t rpc__query_range_request__pack
                     (const Rpc__QueryRangeRequest   *message,
                      uint8_t             *out);
size_t rpc__query_range_request__pack_to_buffer
                     (const Rpc__QueryRangeRequest   *message,
                      ProtobufCBuffer     *buffer);
Rpc__QueryRangeRequest *
       rpc__query_range_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpc__query_range_request__free_unpacked
                     (Rpc__QueryRangeRequest *message,
                      ProtobufCAllocator *allocator);
/* Rpc__QueryRangeResponse methods */
void   rpc__query_range_response__init
                     (Rpc__QueryRangeResponse         *message);
size_t rpc__query_range_response__get_packed_size
                     (const Rpc__QueryRangeResponse   *message);
size_t rpc__query_range_response__pack
                     (const Rpc__QueryRangeResponse   *message,
                      uint8_t             *out);
size_t rpc__query_range_response__pack_to_buffer
                     (const Rpc__QueryRangeResponse   *message,
                      ProtobufCBuffer     *buffer);
Rpc__QueryRangeResponse *
       rpc__query_range_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpc__query_range_response__free_unpacked
                     (Rpc__QueryRangeResponse *message,
                      ProtobufCAllocator *allocator);
/* Rpc__QueryTagValuesRequest methods */
void   rpc__query_tag_values_request__init
                     (Rpc__QueryTagValuesRequest         *message);
size_t rpc__query_tag_values_request__get_packed_size
                     (const Rpc__QueryTagValuesRequest   *message);
size_t rpc__query_tag_values_request__pack
                     (const Rpc__QueryTagValuesRequest   *message,
                      uint8_t             *out);
size_t rpc__query_tag_values_request__pack_to_buffer
                     (const Rpc__QueryTagValuesRequest   *message,
                      ProtobufCBuffer     *buffer);
Rpc__QueryTagValuesRequest *
       rpc__query_tag_values_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpc__query_tag_values_request__free_unpacked
                     (Rpc__QueryTagValuesRequest *message,
                      ProtobufCAllocator *allocator);
/* Rpc__QueryTagValuesResponse methods */
void   rpc__query_tag_values_response__init
                     (Rpc__QueryTagValuesResponse         *message);
size_t rpc__query_tag_values_response__get_packed_size
                     (const Rpc__QueryTagValuesResponse   *message);
size_t rpc__query_tag_values_response__pack
                     (const Rpc__QueryTagValuesResponse   *message,
                      uint8_t             *out);
size_t rpc__query_tag_values_response__pack_to_buffer
                     (const Rpc__QueryTagValuesResponse   *message,
                      ProtobufCBuffer     *buffer);
Rpc__QueryTagValuesResponse *
       rpc__query_tag_values_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpc__query_tag_values_response__free_unpacked
                     (Rpc__QueryTagValuesResponse *message,
                      ProtobufCAllocator *allocator);
/* Rpc__QueryNewPointRequest methods */
void   rpc__query_new_point_request__init
                     (Rpc__QueryNewPointRequest         *message);
size_t rpc__query_new_point_request__get_packed_size
                     (const Rpc__QueryNewPointRequest   *message);
size_t rpc__query_new_point_request__pack
                     (const Rpc__QueryNewPointRequest   *message,
                      uint8_t             *out);
size_t rpc__query_new_point_request__pack_to_buffer
                     (const Rpc__QueryNewPointRequest   *message,
                      ProtobufCBuffer     *buffer);
Rpc__QueryNewPointRequest *
       rpc__query_new_point_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpc__query_new_point_request__free_unpacked
                     (Rpc__QueryNewPointRequest *message,
                      ProtobufCAllocator *allocator);
/* Rpc__QueryNewPointResponse methods */
void   rpc__query_new_point_response__init
                     (Rpc__QueryNewPointResponse         *message);
size_t rpc__query_new_point_response__get_packed_size
                     (const Rpc__QueryNewPointResponse   *message);
size_t rpc__query_new_point_response__pack
                     (const Rpc__QueryNewPointResponse   *message,
                      uint8_t             *out);
size_t rpc__query_new_point_response__pack_to_buffer
                     (const Rpc__QueryNewPointResponse   *message,
                      ProtobufCBuffer     *buffer);
Rpc__QueryNewPointResponse *
       rpc__query_new_point_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpc__query_new_point_response__free_unpacked
                     (Rpc__QueryNewPointResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Rpc__WritePointsRequest_Closure)
                 (const Rpc__WritePointsRequest *message,
                  void *closure_data);
typedef void (*Rpc__WritePointsResponse_Closure)
                 (const Rpc__WritePointsResponse *message,
                  void *closure_data);
typedef void (*Rpc__QuerySeriesRequest_Closure)
                 (const Rpc__QuerySeriesRequest *message,
                  void *closure_data);
typedef void (*Rpc__QuerySeriesResponse_Closure)
                 (const Rpc__QuerySeriesResponse *message,
                  void *closure_data);
typedef void (*Rpc__ConfigRequest_Closure)
                 (const Rpc__ConfigRequest *message,
                  void *closure_data);
typedef void (*Rpc__ConfigResponse_Closure)
                 (const Rpc__ConfigResponse *message,
                  void *closure_data);
typedef void (*Rpc__QueryRangeRequest_Closure)
                 (const Rpc__QueryRangeRequest *message,
                  void *closure_data);
typedef void (*Rpc__QueryRangeResponse_Closure)
                 (const Rpc__QueryRangeResponse *message,
                  void *closure_data);
typedef void (*Rpc__QueryTagValuesRequest_Closure)
                 (const Rpc__QueryTagValuesRequest *message,
                  void *closure_data);
typedef void (*Rpc__QueryTagValuesResponse_Closure)
                 (const Rpc__QueryTagValuesResponse *message,
                  void *closure_data);
typedef void (*Rpc__QueryNewPointRequest_Closure)
                 (const Rpc__QueryNewPointRequest *message,
                  void *closure_data);
typedef void (*Rpc__QueryNewPointResponse_Closure)
                 (const Rpc__QueryNewPointResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Rpc__Greeter_Service Rpc__Greeter_Service;
struct Rpc__Greeter_Service
{
  ProtobufCService base;
  void (*write_points)(Rpc__Greeter_Service *service,
                       const Rpc__WritePointsRequest *input,
                       Rpc__WritePointsResponse_Closure closure,
                       void *closure_data);
  void (*query_series)(Rpc__Greeter_Service *service,
                       const Rpc__QuerySeriesRequest *input,
                       Rpc__QuerySeriesResponse_Closure closure,
                       void *closure_data);
  void (*config)(Rpc__Greeter_Service *service,
                 const Rpc__ConfigRequest *input,
                 Rpc__ConfigResponse_Closure closure,
                 void *closure_data);
  void (*query_range)(Rpc__Greeter_Service *service,
                      const Rpc__QueryRangeRequest *input,
                      Rpc__QueryRangeResponse_Closure closure,
                      void *closure_data);
  void (*query_tag_values)(Rpc__Greeter_Service *service,
                           const Rpc__QueryTagValuesRequest *input,
                           Rpc__QueryTagValuesResponse_Closure closure,
                           void *closure_data);
  void (*query_new_point)(Rpc__Greeter_Service *service,
                          const Rpc__QueryNewPointRequest *input,
                          Rpc__QueryNewPointResponse_Closure closure,
                          void *closure_data);
};
typedef void (*Rpc__Greeter_ServiceDestroy)(Rpc__Greeter_Service *);
void rpc__greeter__init (Rpc__Greeter_Service *service,
                         Rpc__Greeter_ServiceDestroy destroy);
#define RPC__GREETER__BASE_INIT \
    { &rpc__greeter__descriptor, protobuf_c_service_invoke_internal, NULL }
#define RPC__GREETER__INIT(function_prefix__) \
    { RPC__GREETER__BASE_INIT,\
      function_prefix__ ## write_points,\
      function_prefix__ ## query_series,\
      function_prefix__ ## config,\
      function_prefix__ ## query_range,\
      function_prefix__ ## query_tag_values,\
      function_prefix__ ## query_new_point  }
void rpc__greeter__write_points(ProtobufCService *service,
                                const Rpc__WritePointsRequest *input,
                                Rpc__WritePointsResponse_Closure closure,
                                void *closure_data);
void rpc__greeter__query_series(ProtobufCService *service,
                                const Rpc__QuerySeriesRequest *input,
                                Rpc__QuerySeriesResponse_Closure closure,
                                void *closure_data);
void rpc__greeter__config(ProtobufCService *service,
                          const Rpc__ConfigRequest *input,
                          Rpc__ConfigResponse_Closure closure,
                          void *closure_data);
void rpc__greeter__query_range(ProtobufCService *service,
                               const Rpc__QueryRangeRequest *input,
                               Rpc__QueryRangeResponse_Closure closure,
                               void *closure_data);
void rpc__greeter__query_tag_values(ProtobufCService *service,
                                    const Rpc__QueryTagValuesRequest *input,
                                    Rpc__QueryTagValuesResponse_Closure closure,
                                    void *closure_data);
void rpc__greeter__query_new_point(ProtobufCService *service,
                                   const Rpc__QueryNewPointRequest *input,
                                   Rpc__QueryNewPointResponse_Closure closure,
                                   void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor rpc__write_points_request__descriptor;
extern const ProtobufCMessageDescriptor rpc__write_points_response__descriptor;
extern const ProtobufCMessageDescriptor rpc__query_series_request__descriptor;
extern const ProtobufCMessageDescriptor rpc__query_series_response__descriptor;
extern const ProtobufCMessageDescriptor rpc__config_request__descriptor;
extern const ProtobufCMessageDescriptor rpc__config_response__descriptor;
extern const ProtobufCMessageDescriptor rpc__query_range_request__descriptor;
extern const ProtobufCMessageDescriptor rpc__query_range_response__descriptor;
extern const ProtobufCMessageDescriptor rpc__query_tag_values_request__descriptor;
extern const ProtobufCMessageDescriptor rpc__query_tag_values_response__descriptor;
extern const ProtobufCMessageDescriptor rpc__query_new_point_request__descriptor;
extern const ProtobufCMessageDescriptor rpc__query_new_point_response__descriptor;
extern const ProtobufCServiceDescriptor rpc__greeter__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_client_2eproto__INCLUDED */
