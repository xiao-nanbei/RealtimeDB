// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.proto

#include "client.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace rpc {
PROTOBUF_CONSTEXPR WritePointsRequest::WritePointsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.row_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WritePointsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WritePointsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WritePointsRequestDefaultTypeInternal() {}
  union {
    WritePointsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WritePointsRequestDefaultTypeInternal _WritePointsRequest_default_instance_;
PROTOBUF_CONSTEXPR WritePointsResponse::WritePointsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reply_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WritePointsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WritePointsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WritePointsResponseDefaultTypeInternal() {}
  union {
    WritePointsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WritePointsResponseDefaultTypeInternal _WritePointsResponse_default_instance_;
PROTOBUF_CONSTEXPR QuerySeriesRequest::QuerySeriesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tags_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QuerySeriesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuerySeriesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuerySeriesRequestDefaultTypeInternal() {}
  union {
    QuerySeriesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuerySeriesRequestDefaultTypeInternal _QuerySeriesRequest_default_instance_;
PROTOBUF_CONSTEXPR QuerySeriesResponse::QuerySeriesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reply_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QuerySeriesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuerySeriesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuerySeriesResponseDefaultTypeInternal() {}
  union {
    QuerySeriesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuerySeriesResponseDefaultTypeInternal _QuerySeriesResponse_default_instance_;
PROTOBUF_CONSTEXPR ConfigRequest::ConfigRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ConfigRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConfigRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConfigRequestDefaultTypeInternal() {}
  union {
    ConfigRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConfigRequestDefaultTypeInternal _ConfigRequest_default_instance_;
PROTOBUF_CONSTEXPR ConfigResponse::ConfigResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reply_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ConfigResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConfigResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConfigResponseDefaultTypeInternal() {}
  union {
    ConfigResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConfigResponseDefaultTypeInternal _ConfigResponse_default_instance_;
PROTOBUF_CONSTEXPR QueryRangeRequest::QueryRangeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metric_tags_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryRangeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryRangeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryRangeRequestDefaultTypeInternal() {}
  union {
    QueryRangeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryRangeRequestDefaultTypeInternal _QueryRangeRequest_default_instance_;
PROTOBUF_CONSTEXPR QueryRangeResponse::QueryRangeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reply_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryRangeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryRangeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryRangeResponseDefaultTypeInternal() {}
  union {
    QueryRangeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryRangeResponseDefaultTypeInternal _QueryRangeResponse_default_instance_;
PROTOBUF_CONSTEXPR QueryTagValuesRequest::QueryTagValuesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tag_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryTagValuesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryTagValuesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryTagValuesRequestDefaultTypeInternal() {}
  union {
    QueryTagValuesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryTagValuesRequestDefaultTypeInternal _QueryTagValuesRequest_default_instance_;
PROTOBUF_CONSTEXPR QueryTagValuesResponse::QueryTagValuesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reply_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryTagValuesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryTagValuesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryTagValuesResponseDefaultTypeInternal() {}
  union {
    QueryTagValuesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryTagValuesResponseDefaultTypeInternal _QueryTagValuesResponse_default_instance_;
PROTOBUF_CONSTEXPR QueryNewPointRequest::QueryNewPointRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tag_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryNewPointRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryNewPointRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryNewPointRequestDefaultTypeInternal() {}
  union {
    QueryNewPointRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryNewPointRequestDefaultTypeInternal _QueryNewPointRequest_default_instance_;
PROTOBUF_CONSTEXPR QueryNewPointResponse::QueryNewPointResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reply_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryNewPointResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryNewPointResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryNewPointResponseDefaultTypeInternal() {}
  union {
    QueryNewPointResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryNewPointResponseDefaultTypeInternal _QueryNewPointResponse_default_instance_;
PROTOBUF_CONSTEXPR QuerySeriesAllDataRequest::QuerySeriesAllDataRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metric_tags_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QuerySeriesAllDataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuerySeriesAllDataRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuerySeriesAllDataRequestDefaultTypeInternal() {}
  union {
    QuerySeriesAllDataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuerySeriesAllDataRequestDefaultTypeInternal _QuerySeriesAllDataRequest_default_instance_;
PROTOBUF_CONSTEXPR QuerySeriesAllDataResponse::QuerySeriesAllDataResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reply_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QuerySeriesAllDataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuerySeriesAllDataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuerySeriesAllDataResponseDefaultTypeInternal() {}
  union {
    QuerySeriesAllDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuerySeriesAllDataResponseDefaultTypeInternal _QuerySeriesAllDataResponse_default_instance_;
PROTOBUF_CONSTEXPR QueryAllDataResponse::QueryAllDataResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reply_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryAllDataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAllDataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAllDataResponseDefaultTypeInternal() {}
  union {
    QueryAllDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAllDataResponseDefaultTypeInternal _QueryAllDataResponse_default_instance_;
}  // namespace rpc
static ::_pb::Metadata file_level_metadata_client_2eproto[15];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_client_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_client_2eproto = nullptr;

const uint32_t TableStruct_client_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rpc::WritePointsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rpc::WritePointsRequest, _impl_.row_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rpc::WritePointsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rpc::WritePointsResponse, _impl_.reply_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rpc::QuerySeriesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rpc::QuerySeriesRequest, _impl_.tags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rpc::QuerySeriesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rpc::QuerySeriesResponse, _impl_.reply_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rpc::ConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rpc::ConfigRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rpc::ConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rpc::ConfigResponse, _impl_.reply_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rpc::QueryRangeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rpc::QueryRangeRequest, _impl_.metric_tags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rpc::QueryRangeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rpc::QueryRangeResponse, _impl_.reply_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rpc::QueryTagValuesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rpc::QueryTagValuesRequest, _impl_.tag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rpc::QueryTagValuesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rpc::QueryTagValuesResponse, _impl_.reply_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rpc::QueryNewPointRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rpc::QueryNewPointRequest, _impl_.tag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rpc::QueryNewPointResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rpc::QueryNewPointResponse, _impl_.reply_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rpc::QuerySeriesAllDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rpc::QuerySeriesAllDataRequest, _impl_.metric_tags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rpc::QuerySeriesAllDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rpc::QuerySeriesAllDataResponse, _impl_.reply_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rpc::QueryAllDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rpc::QueryAllDataResponse, _impl_.reply_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::rpc::WritePointsRequest)},
  { 7, -1, -1, sizeof(::rpc::WritePointsResponse)},
  { 14, -1, -1, sizeof(::rpc::QuerySeriesRequest)},
  { 21, -1, -1, sizeof(::rpc::QuerySeriesResponse)},
  { 28, -1, -1, sizeof(::rpc::ConfigRequest)},
  { 35, -1, -1, sizeof(::rpc::ConfigResponse)},
  { 42, -1, -1, sizeof(::rpc::QueryRangeRequest)},
  { 49, -1, -1, sizeof(::rpc::QueryRangeResponse)},
  { 56, -1, -1, sizeof(::rpc::QueryTagValuesRequest)},
  { 63, -1, -1, sizeof(::rpc::QueryTagValuesResponse)},
  { 70, -1, -1, sizeof(::rpc::QueryNewPointRequest)},
  { 77, -1, -1, sizeof(::rpc::QueryNewPointResponse)},
  { 84, -1, -1, sizeof(::rpc::QuerySeriesAllDataRequest)},
  { 91, -1, -1, sizeof(::rpc::QuerySeriesAllDataResponse)},
  { 98, -1, -1, sizeof(::rpc::QueryAllDataResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::rpc::_WritePointsRequest_default_instance_._instance,
  &::rpc::_WritePointsResponse_default_instance_._instance,
  &::rpc::_QuerySeriesRequest_default_instance_._instance,
  &::rpc::_QuerySeriesResponse_default_instance_._instance,
  &::rpc::_ConfigRequest_default_instance_._instance,
  &::rpc::_ConfigResponse_default_instance_._instance,
  &::rpc::_QueryRangeRequest_default_instance_._instance,
  &::rpc::_QueryRangeResponse_default_instance_._instance,
  &::rpc::_QueryTagValuesRequest_default_instance_._instance,
  &::rpc::_QueryTagValuesResponse_default_instance_._instance,
  &::rpc::_QueryNewPointRequest_default_instance_._instance,
  &::rpc::_QueryNewPointResponse_default_instance_._instance,
  &::rpc::_QuerySeriesAllDataRequest_default_instance_._instance,
  &::rpc::_QuerySeriesAllDataResponse_default_instance_._instance,
  &::rpc::_QueryAllDataResponse_default_instance_._instance,
};

const char descriptor_table_protodef_client_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014client.proto\022\003rpc\032\033google/protobuf/emp"
  "ty.proto\"!\n\022WritePointsRequest\022\013\n\003row\030\001 "
  "\001(\t\"$\n\023WritePointsResponse\022\r\n\005reply\030\002 \001("
  "\t\"\"\n\022QuerySeriesRequest\022\014\n\004tags\030\003 \001(\t\"$\n"
  "\023QuerySeriesResponse\022\r\n\005reply\030\004 \001(\t\"\035\n\rC"
  "onfigRequest\022\014\n\004name\030\013 \001(\t\"\037\n\016ConfigResp"
  "onse\022\r\n\005reply\030\006 \001(\t\"(\n\021QueryRangeRequest"
  "\022\023\n\013metric_tags\030\007 \001(\t\"#\n\022QueryRangeRespo"
  "nse\022\r\n\005reply\030\010 \001(\t\"$\n\025QueryTagValuesRequ"
  "est\022\013\n\003tag\030\t \001(\t\"\'\n\026QueryTagValuesRespon"
  "se\022\r\n\005reply\030\n \001(\t\"#\n\024QueryNewPointReques"
  "t\022\013\n\003tag\030\t \001(\t\"&\n\025QueryNewPointResponse\022"
  "\r\n\005reply\030\n \001(\t\"0\n\031QuerySeriesAllDataRequ"
  "est\022\023\n\013metric_tags\030\007 \001(\t\"+\n\032QuerySeriesA"
  "llDataResponse\022\r\n\005reply\030\002 \001(\t\"%\n\024QueryAl"
  "lDataResponse\022\r\n\005reply\030\014 \001(\t2\274\004\n\007Greeter"
  "\022B\n\013WritePoints\022\027.rpc.WritePointsRequest"
  "\032\030.rpc.WritePointsResponse\"\000\022B\n\013QuerySer"
  "ies\022\027.rpc.QuerySeriesRequest\032\030.rpc.Query"
  "SeriesResponse\"\000\0223\n\006Config\022\022.rpc.ConfigR"
  "equest\032\023.rpc.ConfigResponse\"\000\022\?\n\nQueryRa"
  "nge\022\026.rpc.QueryRangeRequest\032\027.rpc.QueryR"
  "angeResponse\"\000\022K\n\016QueryTagValues\022\032.rpc.Q"
  "ueryTagValuesRequest\032\033.rpc.QueryTagValue"
  "sResponse\"\000\022H\n\rQueryNewPoint\022\031.rpc.Query"
  "NewPointRequest\032\032.rpc.QueryNewPointRespo"
  "nse\"\000\022W\n\022QuerySeriesAllData\022\036.rpc.QueryS"
  "eriesAllDataRequest\032\037.rpc.QuerySeriesAll"
  "DataResponse\"\000\022C\n\014QueryAllData\022\026.google."
  "protobuf.Empty\032\031.rpc.QueryAllDataRespons"
  "e\"\000B\007Z\005./rpcb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_client_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::_pbi::once_flag descriptor_table_client_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_client_2eproto = {
    false, false, 1220, descriptor_table_protodef_client_2eproto,
    "client.proto",
    &descriptor_table_client_2eproto_once, descriptor_table_client_2eproto_deps, 1, 15,
    schemas, file_default_instances, TableStruct_client_2eproto::offsets,
    file_level_metadata_client_2eproto, file_level_enum_descriptors_client_2eproto,
    file_level_service_descriptors_client_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_client_2eproto_getter() {
  return &descriptor_table_client_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_client_2eproto(&descriptor_table_client_2eproto);
namespace rpc {

// ===================================================================

class WritePointsRequest::_Internal {
 public:
};

WritePointsRequest::WritePointsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:rpc.WritePointsRequest)
}
WritePointsRequest::WritePointsRequest(const WritePointsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WritePointsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.row_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.row_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.row_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_row().empty()) {
    _this->_impl_.row_.Set(from._internal_row(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:rpc.WritePointsRequest)
}

inline void WritePointsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.row_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.row_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.row_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WritePointsRequest::~WritePointsRequest() {
  // @@protoc_insertion_point(destructor:rpc.WritePointsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WritePointsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.row_.Destroy();
}

void WritePointsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WritePointsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.WritePointsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.row_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WritePointsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string row = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_row();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rpc.WritePointsRequest.row"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WritePointsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpc.WritePointsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string row = 1;
  if (!this->_internal_row().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_row().data(), static_cast<int>(this->_internal_row().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rpc.WritePointsRequest.row");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_row(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.WritePointsRequest)
  return target;
}

size_t WritePointsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.WritePointsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string row = 1;
  if (!this->_internal_row().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_row());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WritePointsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WritePointsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WritePointsRequest::GetClassData() const { return &_class_data_; }


void WritePointsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WritePointsRequest*>(&to_msg);
  auto& from = static_cast<const WritePointsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rpc.WritePointsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_row().empty()) {
    _this->_internal_set_row(from._internal_row());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WritePointsRequest::CopyFrom(const WritePointsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.WritePointsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WritePointsRequest::IsInitialized() const {
  return true;
}

void WritePointsRequest::InternalSwap(WritePointsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.row_, lhs_arena,
      &other->_impl_.row_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata WritePointsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_client_2eproto_getter, &descriptor_table_client_2eproto_once,
      file_level_metadata_client_2eproto[0]);
}

// ===================================================================

class WritePointsResponse::_Internal {
 public:
};

WritePointsResponse::WritePointsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:rpc.WritePointsResponse)
}
WritePointsResponse::WritePointsResponse(const WritePointsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WritePointsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reply_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.reply_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reply().empty()) {
    _this->_impl_.reply_.Set(from._internal_reply(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:rpc.WritePointsResponse)
}

inline void WritePointsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reply_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.reply_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WritePointsResponse::~WritePointsResponse() {
  // @@protoc_insertion_point(destructor:rpc.WritePointsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WritePointsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.reply_.Destroy();
}

void WritePointsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WritePointsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.WritePointsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reply_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WritePointsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string reply = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_reply();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rpc.WritePointsResponse.reply"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WritePointsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpc.WritePointsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string reply = 2;
  if (!this->_internal_reply().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reply().data(), static_cast<int>(this->_internal_reply().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rpc.WritePointsResponse.reply");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_reply(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.WritePointsResponse)
  return target;
}

size_t WritePointsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.WritePointsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reply = 2;
  if (!this->_internal_reply().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reply());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WritePointsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WritePointsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WritePointsResponse::GetClassData() const { return &_class_data_; }


void WritePointsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WritePointsResponse*>(&to_msg);
  auto& from = static_cast<const WritePointsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rpc.WritePointsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_reply().empty()) {
    _this->_internal_set_reply(from._internal_reply());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WritePointsResponse::CopyFrom(const WritePointsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.WritePointsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WritePointsResponse::IsInitialized() const {
  return true;
}

void WritePointsResponse::InternalSwap(WritePointsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reply_, lhs_arena,
      &other->_impl_.reply_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata WritePointsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_client_2eproto_getter, &descriptor_table_client_2eproto_once,
      file_level_metadata_client_2eproto[1]);
}

// ===================================================================

class QuerySeriesRequest::_Internal {
 public:
};

QuerySeriesRequest::QuerySeriesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:rpc.QuerySeriesRequest)
}
QuerySeriesRequest::QuerySeriesRequest(const QuerySeriesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QuerySeriesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.tags_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tags_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tags().empty()) {
    _this->_impl_.tags_.Set(from._internal_tags(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:rpc.QuerySeriesRequest)
}

inline void QuerySeriesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tags_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.tags_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tags_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QuerySeriesRequest::~QuerySeriesRequest() {
  // @@protoc_insertion_point(destructor:rpc.QuerySeriesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QuerySeriesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tags_.Destroy();
}

void QuerySeriesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QuerySeriesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.QuerySeriesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuerySeriesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string tags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_tags();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rpc.QuerySeriesRequest.tags"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QuerySeriesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpc.QuerySeriesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string tags = 3;
  if (!this->_internal_tags().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tags().data(), static_cast<int>(this->_internal_tags().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rpc.QuerySeriesRequest.tags");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_tags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.QuerySeriesRequest)
  return target;
}

size_t QuerySeriesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.QuerySeriesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tags = 3;
  if (!this->_internal_tags().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuerySeriesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QuerySeriesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuerySeriesRequest::GetClassData() const { return &_class_data_; }


void QuerySeriesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QuerySeriesRequest*>(&to_msg);
  auto& from = static_cast<const QuerySeriesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rpc.QuerySeriesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tags().empty()) {
    _this->_internal_set_tags(from._internal_tags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuerySeriesRequest::CopyFrom(const QuerySeriesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.QuerySeriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySeriesRequest::IsInitialized() const {
  return true;
}

void QuerySeriesRequest::InternalSwap(QuerySeriesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tags_, lhs_arena,
      &other->_impl_.tags_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata QuerySeriesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_client_2eproto_getter, &descriptor_table_client_2eproto_once,
      file_level_metadata_client_2eproto[2]);
}

// ===================================================================

class QuerySeriesResponse::_Internal {
 public:
};

QuerySeriesResponse::QuerySeriesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:rpc.QuerySeriesResponse)
}
QuerySeriesResponse::QuerySeriesResponse(const QuerySeriesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QuerySeriesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reply_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.reply_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reply().empty()) {
    _this->_impl_.reply_.Set(from._internal_reply(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:rpc.QuerySeriesResponse)
}

inline void QuerySeriesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reply_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.reply_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QuerySeriesResponse::~QuerySeriesResponse() {
  // @@protoc_insertion_point(destructor:rpc.QuerySeriesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QuerySeriesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.reply_.Destroy();
}

void QuerySeriesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QuerySeriesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.QuerySeriesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reply_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuerySeriesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string reply = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_reply();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rpc.QuerySeriesResponse.reply"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QuerySeriesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpc.QuerySeriesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string reply = 4;
  if (!this->_internal_reply().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reply().data(), static_cast<int>(this->_internal_reply().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rpc.QuerySeriesResponse.reply");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_reply(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.QuerySeriesResponse)
  return target;
}

size_t QuerySeriesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.QuerySeriesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reply = 4;
  if (!this->_internal_reply().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reply());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuerySeriesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QuerySeriesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuerySeriesResponse::GetClassData() const { return &_class_data_; }


void QuerySeriesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QuerySeriesResponse*>(&to_msg);
  auto& from = static_cast<const QuerySeriesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rpc.QuerySeriesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_reply().empty()) {
    _this->_internal_set_reply(from._internal_reply());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuerySeriesResponse::CopyFrom(const QuerySeriesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.QuerySeriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySeriesResponse::IsInitialized() const {
  return true;
}

void QuerySeriesResponse::InternalSwap(QuerySeriesResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reply_, lhs_arena,
      &other->_impl_.reply_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata QuerySeriesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_client_2eproto_getter, &descriptor_table_client_2eproto_once,
      file_level_metadata_client_2eproto[3]);
}

// ===================================================================

class ConfigRequest::_Internal {
 public:
};

ConfigRequest::ConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:rpc.ConfigRequest)
}
ConfigRequest::ConfigRequest(const ConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ConfigRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:rpc.ConfigRequest)
}

inline void ConfigRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ConfigRequest::~ConfigRequest() {
  // @@protoc_insertion_point(destructor:rpc.ConfigRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void ConfigRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.ConfigRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rpc.ConfigRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConfigRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpc.ConfigRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 11;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rpc.ConfigRequest.name");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.ConfigRequest)
  return target;
}

size_t ConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.ConfigRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 11;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConfigRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ConfigRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConfigRequest::GetClassData() const { return &_class_data_; }


void ConfigRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ConfigRequest*>(&to_msg);
  auto& from = static_cast<const ConfigRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rpc.ConfigRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConfigRequest::CopyFrom(const ConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.ConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigRequest::IsInitialized() const {
  return true;
}

void ConfigRequest::InternalSwap(ConfigRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_client_2eproto_getter, &descriptor_table_client_2eproto_once,
      file_level_metadata_client_2eproto[4]);
}

// ===================================================================

class ConfigResponse::_Internal {
 public:
};

ConfigResponse::ConfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:rpc.ConfigResponse)
}
ConfigResponse::ConfigResponse(const ConfigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ConfigResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reply_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.reply_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reply().empty()) {
    _this->_impl_.reply_.Set(from._internal_reply(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:rpc.ConfigResponse)
}

inline void ConfigResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reply_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.reply_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ConfigResponse::~ConfigResponse() {
  // @@protoc_insertion_point(destructor:rpc.ConfigResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ConfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.reply_.Destroy();
}

void ConfigResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.ConfigResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reply_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string reply = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_reply();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rpc.ConfigResponse.reply"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConfigResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpc.ConfigResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string reply = 6;
  if (!this->_internal_reply().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reply().data(), static_cast<int>(this->_internal_reply().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rpc.ConfigResponse.reply");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_reply(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.ConfigResponse)
  return target;
}

size_t ConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.ConfigResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reply = 6;
  if (!this->_internal_reply().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reply());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConfigResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ConfigResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConfigResponse::GetClassData() const { return &_class_data_; }


void ConfigResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ConfigResponse*>(&to_msg);
  auto& from = static_cast<const ConfigResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rpc.ConfigResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_reply().empty()) {
    _this->_internal_set_reply(from._internal_reply());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConfigResponse::CopyFrom(const ConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.ConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigResponse::IsInitialized() const {
  return true;
}

void ConfigResponse::InternalSwap(ConfigResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reply_, lhs_arena,
      &other->_impl_.reply_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_client_2eproto_getter, &descriptor_table_client_2eproto_once,
      file_level_metadata_client_2eproto[5]);
}

// ===================================================================

class QueryRangeRequest::_Internal {
 public:
};

QueryRangeRequest::QueryRangeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:rpc.QueryRangeRequest)
}
QueryRangeRequest::QueryRangeRequest(const QueryRangeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryRangeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metric_tags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.metric_tags_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metric_tags_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_metric_tags().empty()) {
    _this->_impl_.metric_tags_.Set(from._internal_metric_tags(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:rpc.QueryRangeRequest)
}

inline void QueryRangeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metric_tags_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.metric_tags_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metric_tags_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryRangeRequest::~QueryRangeRequest() {
  // @@protoc_insertion_point(destructor:rpc.QueryRangeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryRangeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.metric_tags_.Destroy();
}

void QueryRangeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryRangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.QueryRangeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metric_tags_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryRangeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string metric_tags = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_metric_tags();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rpc.QueryRangeRequest.metric_tags"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QueryRangeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpc.QueryRangeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string metric_tags = 7;
  if (!this->_internal_metric_tags().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_metric_tags().data(), static_cast<int>(this->_internal_metric_tags().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rpc.QueryRangeRequest.metric_tags");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_metric_tags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.QueryRangeRequest)
  return target;
}

size_t QueryRangeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.QueryRangeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string metric_tags = 7;
  if (!this->_internal_metric_tags().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_metric_tags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryRangeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryRangeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryRangeRequest::GetClassData() const { return &_class_data_; }


void QueryRangeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryRangeRequest*>(&to_msg);
  auto& from = static_cast<const QueryRangeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rpc.QueryRangeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_metric_tags().empty()) {
    _this->_internal_set_metric_tags(from._internal_metric_tags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryRangeRequest::CopyFrom(const QueryRangeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.QueryRangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRangeRequest::IsInitialized() const {
  return true;
}

void QueryRangeRequest::InternalSwap(QueryRangeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.metric_tags_, lhs_arena,
      &other->_impl_.metric_tags_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryRangeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_client_2eproto_getter, &descriptor_table_client_2eproto_once,
      file_level_metadata_client_2eproto[6]);
}

// ===================================================================

class QueryRangeResponse::_Internal {
 public:
};

QueryRangeResponse::QueryRangeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:rpc.QueryRangeResponse)
}
QueryRangeResponse::QueryRangeResponse(const QueryRangeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryRangeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reply_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.reply_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reply().empty()) {
    _this->_impl_.reply_.Set(from._internal_reply(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:rpc.QueryRangeResponse)
}

inline void QueryRangeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reply_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.reply_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryRangeResponse::~QueryRangeResponse() {
  // @@protoc_insertion_point(destructor:rpc.QueryRangeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryRangeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.reply_.Destroy();
}

void QueryRangeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryRangeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.QueryRangeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reply_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryRangeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string reply = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_reply();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rpc.QueryRangeResponse.reply"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QueryRangeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpc.QueryRangeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string reply = 8;
  if (!this->_internal_reply().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reply().data(), static_cast<int>(this->_internal_reply().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rpc.QueryRangeResponse.reply");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_reply(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.QueryRangeResponse)
  return target;
}

size_t QueryRangeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.QueryRangeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reply = 8;
  if (!this->_internal_reply().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reply());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryRangeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryRangeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryRangeResponse::GetClassData() const { return &_class_data_; }


void QueryRangeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryRangeResponse*>(&to_msg);
  auto& from = static_cast<const QueryRangeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rpc.QueryRangeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_reply().empty()) {
    _this->_internal_set_reply(from._internal_reply());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryRangeResponse::CopyFrom(const QueryRangeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.QueryRangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRangeResponse::IsInitialized() const {
  return true;
}

void QueryRangeResponse::InternalSwap(QueryRangeResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reply_, lhs_arena,
      &other->_impl_.reply_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryRangeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_client_2eproto_getter, &descriptor_table_client_2eproto_once,
      file_level_metadata_client_2eproto[7]);
}

// ===================================================================

class QueryTagValuesRequest::_Internal {
 public:
};

QueryTagValuesRequest::QueryTagValuesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:rpc.QueryTagValuesRequest)
}
QueryTagValuesRequest::QueryTagValuesRequest(const QueryTagValuesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryTagValuesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tag_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.tag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tag_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tag().empty()) {
    _this->_impl_.tag_.Set(from._internal_tag(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:rpc.QueryTagValuesRequest)
}

inline void QueryTagValuesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tag_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.tag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tag_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryTagValuesRequest::~QueryTagValuesRequest() {
  // @@protoc_insertion_point(destructor:rpc.QueryTagValuesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryTagValuesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tag_.Destroy();
}

void QueryTagValuesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryTagValuesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.QueryTagValuesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tag_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryTagValuesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string tag = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_tag();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rpc.QueryTagValuesRequest.tag"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QueryTagValuesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpc.QueryTagValuesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string tag = 9;
  if (!this->_internal_tag().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tag().data(), static_cast<int>(this->_internal_tag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rpc.QueryTagValuesRequest.tag");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_tag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.QueryTagValuesRequest)
  return target;
}

size_t QueryTagValuesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.QueryTagValuesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tag = 9;
  if (!this->_internal_tag().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tag());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryTagValuesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryTagValuesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryTagValuesRequest::GetClassData() const { return &_class_data_; }


void QueryTagValuesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryTagValuesRequest*>(&to_msg);
  auto& from = static_cast<const QueryTagValuesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rpc.QueryTagValuesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tag().empty()) {
    _this->_internal_set_tag(from._internal_tag());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryTagValuesRequest::CopyFrom(const QueryTagValuesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.QueryTagValuesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryTagValuesRequest::IsInitialized() const {
  return true;
}

void QueryTagValuesRequest::InternalSwap(QueryTagValuesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tag_, lhs_arena,
      &other->_impl_.tag_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryTagValuesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_client_2eproto_getter, &descriptor_table_client_2eproto_once,
      file_level_metadata_client_2eproto[8]);
}

// ===================================================================

class QueryTagValuesResponse::_Internal {
 public:
};

QueryTagValuesResponse::QueryTagValuesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:rpc.QueryTagValuesResponse)
}
QueryTagValuesResponse::QueryTagValuesResponse(const QueryTagValuesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryTagValuesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reply_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.reply_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reply().empty()) {
    _this->_impl_.reply_.Set(from._internal_reply(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:rpc.QueryTagValuesResponse)
}

inline void QueryTagValuesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reply_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.reply_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryTagValuesResponse::~QueryTagValuesResponse() {
  // @@protoc_insertion_point(destructor:rpc.QueryTagValuesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryTagValuesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.reply_.Destroy();
}

void QueryTagValuesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryTagValuesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.QueryTagValuesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reply_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryTagValuesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string reply = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_reply();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rpc.QueryTagValuesResponse.reply"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QueryTagValuesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpc.QueryTagValuesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string reply = 10;
  if (!this->_internal_reply().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reply().data(), static_cast<int>(this->_internal_reply().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rpc.QueryTagValuesResponse.reply");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_reply(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.QueryTagValuesResponse)
  return target;
}

size_t QueryTagValuesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.QueryTagValuesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reply = 10;
  if (!this->_internal_reply().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reply());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryTagValuesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryTagValuesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryTagValuesResponse::GetClassData() const { return &_class_data_; }


void QueryTagValuesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryTagValuesResponse*>(&to_msg);
  auto& from = static_cast<const QueryTagValuesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rpc.QueryTagValuesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_reply().empty()) {
    _this->_internal_set_reply(from._internal_reply());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryTagValuesResponse::CopyFrom(const QueryTagValuesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.QueryTagValuesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryTagValuesResponse::IsInitialized() const {
  return true;
}

void QueryTagValuesResponse::InternalSwap(QueryTagValuesResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reply_, lhs_arena,
      &other->_impl_.reply_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryTagValuesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_client_2eproto_getter, &descriptor_table_client_2eproto_once,
      file_level_metadata_client_2eproto[9]);
}

// ===================================================================

class QueryNewPointRequest::_Internal {
 public:
};

QueryNewPointRequest::QueryNewPointRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:rpc.QueryNewPointRequest)
}
QueryNewPointRequest::QueryNewPointRequest(const QueryNewPointRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryNewPointRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tag_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.tag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tag_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tag().empty()) {
    _this->_impl_.tag_.Set(from._internal_tag(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:rpc.QueryNewPointRequest)
}

inline void QueryNewPointRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tag_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.tag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tag_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryNewPointRequest::~QueryNewPointRequest() {
  // @@protoc_insertion_point(destructor:rpc.QueryNewPointRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryNewPointRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tag_.Destroy();
}

void QueryNewPointRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryNewPointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.QueryNewPointRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tag_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryNewPointRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string tag = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_tag();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rpc.QueryNewPointRequest.tag"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QueryNewPointRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpc.QueryNewPointRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string tag = 9;
  if (!this->_internal_tag().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tag().data(), static_cast<int>(this->_internal_tag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rpc.QueryNewPointRequest.tag");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_tag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.QueryNewPointRequest)
  return target;
}

size_t QueryNewPointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.QueryNewPointRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tag = 9;
  if (!this->_internal_tag().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tag());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryNewPointRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryNewPointRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryNewPointRequest::GetClassData() const { return &_class_data_; }


void QueryNewPointRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryNewPointRequest*>(&to_msg);
  auto& from = static_cast<const QueryNewPointRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rpc.QueryNewPointRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tag().empty()) {
    _this->_internal_set_tag(from._internal_tag());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryNewPointRequest::CopyFrom(const QueryNewPointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.QueryNewPointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryNewPointRequest::IsInitialized() const {
  return true;
}

void QueryNewPointRequest::InternalSwap(QueryNewPointRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tag_, lhs_arena,
      &other->_impl_.tag_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryNewPointRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_client_2eproto_getter, &descriptor_table_client_2eproto_once,
      file_level_metadata_client_2eproto[10]);
}

// ===================================================================

class QueryNewPointResponse::_Internal {
 public:
};

QueryNewPointResponse::QueryNewPointResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:rpc.QueryNewPointResponse)
}
QueryNewPointResponse::QueryNewPointResponse(const QueryNewPointResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryNewPointResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reply_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.reply_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reply().empty()) {
    _this->_impl_.reply_.Set(from._internal_reply(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:rpc.QueryNewPointResponse)
}

inline void QueryNewPointResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reply_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.reply_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryNewPointResponse::~QueryNewPointResponse() {
  // @@protoc_insertion_point(destructor:rpc.QueryNewPointResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryNewPointResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.reply_.Destroy();
}

void QueryNewPointResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryNewPointResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.QueryNewPointResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reply_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryNewPointResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string reply = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_reply();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rpc.QueryNewPointResponse.reply"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QueryNewPointResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpc.QueryNewPointResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string reply = 10;
  if (!this->_internal_reply().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reply().data(), static_cast<int>(this->_internal_reply().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rpc.QueryNewPointResponse.reply");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_reply(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.QueryNewPointResponse)
  return target;
}

size_t QueryNewPointResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.QueryNewPointResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reply = 10;
  if (!this->_internal_reply().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reply());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryNewPointResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryNewPointResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryNewPointResponse::GetClassData() const { return &_class_data_; }


void QueryNewPointResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryNewPointResponse*>(&to_msg);
  auto& from = static_cast<const QueryNewPointResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rpc.QueryNewPointResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_reply().empty()) {
    _this->_internal_set_reply(from._internal_reply());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryNewPointResponse::CopyFrom(const QueryNewPointResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.QueryNewPointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryNewPointResponse::IsInitialized() const {
  return true;
}

void QueryNewPointResponse::InternalSwap(QueryNewPointResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reply_, lhs_arena,
      &other->_impl_.reply_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryNewPointResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_client_2eproto_getter, &descriptor_table_client_2eproto_once,
      file_level_metadata_client_2eproto[11]);
}

// ===================================================================

class QuerySeriesAllDataRequest::_Internal {
 public:
};

QuerySeriesAllDataRequest::QuerySeriesAllDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:rpc.QuerySeriesAllDataRequest)
}
QuerySeriesAllDataRequest::QuerySeriesAllDataRequest(const QuerySeriesAllDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QuerySeriesAllDataRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metric_tags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.metric_tags_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metric_tags_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_metric_tags().empty()) {
    _this->_impl_.metric_tags_.Set(from._internal_metric_tags(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:rpc.QuerySeriesAllDataRequest)
}

inline void QuerySeriesAllDataRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metric_tags_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.metric_tags_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metric_tags_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QuerySeriesAllDataRequest::~QuerySeriesAllDataRequest() {
  // @@protoc_insertion_point(destructor:rpc.QuerySeriesAllDataRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QuerySeriesAllDataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.metric_tags_.Destroy();
}

void QuerySeriesAllDataRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QuerySeriesAllDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.QuerySeriesAllDataRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metric_tags_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuerySeriesAllDataRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string metric_tags = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_metric_tags();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rpc.QuerySeriesAllDataRequest.metric_tags"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QuerySeriesAllDataRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpc.QuerySeriesAllDataRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string metric_tags = 7;
  if (!this->_internal_metric_tags().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_metric_tags().data(), static_cast<int>(this->_internal_metric_tags().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rpc.QuerySeriesAllDataRequest.metric_tags");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_metric_tags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.QuerySeriesAllDataRequest)
  return target;
}

size_t QuerySeriesAllDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.QuerySeriesAllDataRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string metric_tags = 7;
  if (!this->_internal_metric_tags().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_metric_tags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuerySeriesAllDataRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QuerySeriesAllDataRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuerySeriesAllDataRequest::GetClassData() const { return &_class_data_; }


void QuerySeriesAllDataRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QuerySeriesAllDataRequest*>(&to_msg);
  auto& from = static_cast<const QuerySeriesAllDataRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rpc.QuerySeriesAllDataRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_metric_tags().empty()) {
    _this->_internal_set_metric_tags(from._internal_metric_tags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuerySeriesAllDataRequest::CopyFrom(const QuerySeriesAllDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.QuerySeriesAllDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySeriesAllDataRequest::IsInitialized() const {
  return true;
}

void QuerySeriesAllDataRequest::InternalSwap(QuerySeriesAllDataRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.metric_tags_, lhs_arena,
      &other->_impl_.metric_tags_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata QuerySeriesAllDataRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_client_2eproto_getter, &descriptor_table_client_2eproto_once,
      file_level_metadata_client_2eproto[12]);
}

// ===================================================================

class QuerySeriesAllDataResponse::_Internal {
 public:
};

QuerySeriesAllDataResponse::QuerySeriesAllDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:rpc.QuerySeriesAllDataResponse)
}
QuerySeriesAllDataResponse::QuerySeriesAllDataResponse(const QuerySeriesAllDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QuerySeriesAllDataResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reply_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.reply_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reply().empty()) {
    _this->_impl_.reply_.Set(from._internal_reply(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:rpc.QuerySeriesAllDataResponse)
}

inline void QuerySeriesAllDataResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reply_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.reply_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QuerySeriesAllDataResponse::~QuerySeriesAllDataResponse() {
  // @@protoc_insertion_point(destructor:rpc.QuerySeriesAllDataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QuerySeriesAllDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.reply_.Destroy();
}

void QuerySeriesAllDataResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QuerySeriesAllDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.QuerySeriesAllDataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reply_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuerySeriesAllDataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string reply = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_reply();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rpc.QuerySeriesAllDataResponse.reply"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QuerySeriesAllDataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpc.QuerySeriesAllDataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string reply = 2;
  if (!this->_internal_reply().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reply().data(), static_cast<int>(this->_internal_reply().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rpc.QuerySeriesAllDataResponse.reply");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_reply(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.QuerySeriesAllDataResponse)
  return target;
}

size_t QuerySeriesAllDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.QuerySeriesAllDataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reply = 2;
  if (!this->_internal_reply().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reply());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuerySeriesAllDataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QuerySeriesAllDataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuerySeriesAllDataResponse::GetClassData() const { return &_class_data_; }


void QuerySeriesAllDataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QuerySeriesAllDataResponse*>(&to_msg);
  auto& from = static_cast<const QuerySeriesAllDataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rpc.QuerySeriesAllDataResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_reply().empty()) {
    _this->_internal_set_reply(from._internal_reply());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuerySeriesAllDataResponse::CopyFrom(const QuerySeriesAllDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.QuerySeriesAllDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySeriesAllDataResponse::IsInitialized() const {
  return true;
}

void QuerySeriesAllDataResponse::InternalSwap(QuerySeriesAllDataResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reply_, lhs_arena,
      &other->_impl_.reply_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata QuerySeriesAllDataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_client_2eproto_getter, &descriptor_table_client_2eproto_once,
      file_level_metadata_client_2eproto[13]);
}

// ===================================================================

class QueryAllDataResponse::_Internal {
 public:
};

QueryAllDataResponse::QueryAllDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:rpc.QueryAllDataResponse)
}
QueryAllDataResponse::QueryAllDataResponse(const QueryAllDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAllDataResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reply_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.reply_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reply().empty()) {
    _this->_impl_.reply_.Set(from._internal_reply(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:rpc.QueryAllDataResponse)
}

inline void QueryAllDataResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reply_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.reply_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryAllDataResponse::~QueryAllDataResponse() {
  // @@protoc_insertion_point(destructor:rpc.QueryAllDataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAllDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.reply_.Destroy();
}

void QueryAllDataResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAllDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.QueryAllDataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reply_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAllDataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string reply = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_reply();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rpc.QueryAllDataResponse.reply"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QueryAllDataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpc.QueryAllDataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string reply = 12;
  if (!this->_internal_reply().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reply().data(), static_cast<int>(this->_internal_reply().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rpc.QueryAllDataResponse.reply");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_reply(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.QueryAllDataResponse)
  return target;
}

size_t QueryAllDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.QueryAllDataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reply = 12;
  if (!this->_internal_reply().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reply());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAllDataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAllDataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAllDataResponse::GetClassData() const { return &_class_data_; }


void QueryAllDataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAllDataResponse*>(&to_msg);
  auto& from = static_cast<const QueryAllDataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rpc.QueryAllDataResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_reply().empty()) {
    _this->_internal_set_reply(from._internal_reply());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAllDataResponse::CopyFrom(const QueryAllDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.QueryAllDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAllDataResponse::IsInitialized() const {
  return true;
}

void QueryAllDataResponse::InternalSwap(QueryAllDataResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reply_, lhs_arena,
      &other->_impl_.reply_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAllDataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_client_2eproto_getter, &descriptor_table_client_2eproto_once,
      file_level_metadata_client_2eproto[14]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace rpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::rpc::WritePointsRequest*
Arena::CreateMaybeMessage< ::rpc::WritePointsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rpc::WritePointsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::rpc::WritePointsResponse*
Arena::CreateMaybeMessage< ::rpc::WritePointsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rpc::WritePointsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::rpc::QuerySeriesRequest*
Arena::CreateMaybeMessage< ::rpc::QuerySeriesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rpc::QuerySeriesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::rpc::QuerySeriesResponse*
Arena::CreateMaybeMessage< ::rpc::QuerySeriesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rpc::QuerySeriesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::rpc::ConfigRequest*
Arena::CreateMaybeMessage< ::rpc::ConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rpc::ConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::rpc::ConfigResponse*
Arena::CreateMaybeMessage< ::rpc::ConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rpc::ConfigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::rpc::QueryRangeRequest*
Arena::CreateMaybeMessage< ::rpc::QueryRangeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rpc::QueryRangeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::rpc::QueryRangeResponse*
Arena::CreateMaybeMessage< ::rpc::QueryRangeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rpc::QueryRangeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::rpc::QueryTagValuesRequest*
Arena::CreateMaybeMessage< ::rpc::QueryTagValuesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rpc::QueryTagValuesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::rpc::QueryTagValuesResponse*
Arena::CreateMaybeMessage< ::rpc::QueryTagValuesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rpc::QueryTagValuesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::rpc::QueryNewPointRequest*
Arena::CreateMaybeMessage< ::rpc::QueryNewPointRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rpc::QueryNewPointRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::rpc::QueryNewPointResponse*
Arena::CreateMaybeMessage< ::rpc::QueryNewPointResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rpc::QueryNewPointResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::rpc::QuerySeriesAllDataRequest*
Arena::CreateMaybeMessage< ::rpc::QuerySeriesAllDataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rpc::QuerySeriesAllDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::rpc::QuerySeriesAllDataResponse*
Arena::CreateMaybeMessage< ::rpc::QuerySeriesAllDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rpc::QuerySeriesAllDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::rpc::QueryAllDataResponse*
Arena::CreateMaybeMessage< ::rpc::QueryAllDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rpc::QueryAllDataResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
